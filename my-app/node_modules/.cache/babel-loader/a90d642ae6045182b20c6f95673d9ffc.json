{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  } // Получить начальные карточки (GET)\n\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: this._headers\n    }).then(this._checkRes);\n  } // Добавить новую карточку (POST)\n\n\n  addNewCard(card) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(this._checkRes);\n  } // Удалить карточку (DELETE)\n\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkRes);\n  } // Получить данные пользователя (GET)\n\n\n  getUserData() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkRes);\n  } // Заменить данные пользователя (PATCH)\n\n\n  editUserData(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkRes);\n  } // Заменить аватар (PATCH)\n\n\n  editUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar['link']\n      })\n    }).then(this._checkRes);\n  } // Поставть лайк карточке (PUT)\n\n\n  likeHandler(id) {\n    return fetch(`${this._baseUrl}cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkRes);\n  } // Удалить лайк карточки (DELETE)\n\n\n  deleteLikeHandler(id) {\n    return fetch(`${this._baseUrl}cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkRes);\n  } // Отрисовка всех данных на начальной странице\n\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-40/\",\n  headers: {\n    authorization: \"a21500ca-3216-4c89-8f3a-5037d5204e6f\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default Api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkRes","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","addNewCard","card","method","body","JSON","stringify","name","link","deleteCard","id","getUserData","editUserData","data","about","editUserAvatar","avatar","likeHandler","deleteLikeHandler","getInitialData","all","api","authorization"],"sources":["/Users/admin/Documents/Code/dev/mesto-react/my-app/src/utils/API.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _checkRes(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    // Получить начальные карточки (GET)\n    getInitialCards() {\n        return fetch(`${this._baseUrl}cards`, {\n            headers: this._headers,\n        }).then(this._checkRes);\n    }\n\n    // Добавить новую карточку (POST)\n    addNewCard(card) {\n        return fetch(`${this._baseUrl}cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: card.name,\n                link: card.link,\n            }),\n        }).then(this._checkRes);\n    }\n\n    // Удалить карточку (DELETE)\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}cards/${id}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        }).then(this._checkRes);\n    }\n\n    // Получить данные пользователя (GET)\n    getUserData() {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: \"GET\",\n            headers: this._headers,\n        }).then(this._checkRes);\n    }\n\n    // Заменить данные пользователя (PATCH)\n    editUserData(data) {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about,\n            }),\n        }).then(this._checkRes);\n    }\n\n    // Заменить аватар (PATCH)\n    editUserAvatar(avatar) {\n        return fetch(`${this._baseUrl}users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatar['link']\n            }),\n        }).then(this._checkRes);\n    }\n\n    // Поставть лайк карточке (PUT)\n    likeHandler(id) {\n        return fetch(`${this._baseUrl}cards/${id}/likes`, {\n            method: \"PUT\",\n            headers: this._headers,\n        }).then(this._checkRes);\n    }\n\n    // Удалить лайк карточки (DELETE)\n    deleteLikeHandler(id) {\n        return fetch(`${this._baseUrl}cards/${id}/likes`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        }).then(this._checkRes);\n    }\n\n    // Отрисовка всех данных на начальной странице\n    getInitialData() {\n        return Promise.all([this.getUserData(), this.getInitialCards()]);\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-40/\",\n    headers: {\n        authorization: \"a21500ca-3216-4c89-8f3a-5037d5204e6f\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default Api"],"mappings":"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"},"metadata":{},"sourceType":"module"}