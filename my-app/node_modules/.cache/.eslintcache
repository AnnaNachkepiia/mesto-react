[{"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/index.js":"1","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/reportWebVitals.js":"2","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/App.js":"3","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Header.js":"4","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Main.js":"5","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Footer.js":"6","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Card.js":"7","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/ImagePopup.js":"8","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/PopupWithForm.js":"9","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/utils/API.js":"10"},{"size":551,"mtime":1653736531427,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1653598793950,"results":"13","hashOfConfig":"12"},{"size":4505,"mtime":1653863473777,"results":"14","hashOfConfig":"12"},{"size":244,"mtime":1653767039886,"results":"15","hashOfConfig":"12"},{"size":1901,"mtime":1653863026868,"results":"16","hashOfConfig":"12"},{"size":232,"mtime":1653772770125,"results":"17","hashOfConfig":"12"},{"size":719,"mtime":1653864147961,"results":"18","hashOfConfig":"12"},{"size":820,"mtime":1653826463606,"results":"19","hashOfConfig":"12"},{"size":891,"mtime":1653861974164,"results":"20","hashOfConfig":"12"},{"size":2936,"mtime":1653859505075,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"ssxnqu",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/index.js",[],[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/reportWebVitals.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/App.js",["55"],[],"import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction App() {\nconst [isEditProfilePopupOpen, setEditProfilePopup] = React.useState(false)\nconst [isAddPlacePopupOpen, setAddPlacePopup] = React.useState(false);\nconst [isEditAvatarPopupOpen, setEditAvatarPopup] = React.useState(false);\nconst [isConfirmPopupOpen, setConfirmPopup] = React.useState(false);\nconst [selectedCard, setSelectedCard] = React.useState(null);\n\n   \n   function handleEditProfileClick () {\n    setEditProfilePopup(!isEditProfilePopupOpen);\n   }\n\n   function handleAddPlaceClick () {\n    setAddPlacePopup(!isAddPlacePopupOpen);\n   }\n   function handleEditAvatarClick () {\n    setEditAvatarPopup(!isEditAvatarPopupOpen);\n   }\n\n   function handleConfirmClick () {\n    setConfirmPopup(!isConfirmPopupOpen);\n   }\n\n   function handleCardClick (card) {\n       setSelectedCard(card);\n   }\n\n\n \n  function closeAllPopups() {\n    setEditProfilePopup(false);\n    setAddPlacePopup(false);\n    setEditAvatarPopup(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <Header />\n        <Main \n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n        />\n        <Footer />\n        <PopupWithForm\n          name=\"edit\"\n          title=\"Редактировать профиль\"\n          buttonText=\"Сохранить\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"profile-name\"\n            className=\"popup__edit-form popup__edit-form_type_name\"\n            placeholder=\"Введите имя\"\n            minLength={2}\n            maxLength={30}\n            required\n          />\n          <span className=\"popup__text-error\" id=\"profile-name-error\" />\n          <input\n            type=\"text\"\n            name=\"about\"\n            id=\"about\"\n            className=\"popup__edit-form popup__edit-form_type_about\"\n            placeholder=\"Введите описание\"\n            minLength={2}\n            maxLength={200}\n            required\n          />\n          <span className=\"popup__text-error\" id=\"about-error\" />\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"add-card\"\n          title=\"Новое место\"\n          buttonText=\"Создать\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"card-name\"\n            placeholder=\"Название\"\n            className=\"popup__edit-form popup__edit-form_type_card-name\"\n            minLength={2}\n            maxLength={30}\n            required\n          />\n          <span className=\"popup__text-error\" id=\"card-name-error\" />\n          <input\n            type=\"url\"\n            name=\"link\"\n            id=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            className=\"popup__edit-form popup__edit-form_type_link\"\n            minLength={6}\n            maxLength={200}\n            required\n          />\n          <span className=\"popup__text-error\" id=\"link-error\" />\n        </PopupWithForm>\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          buttonText=\"Да\"\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n        >\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"update-avatar\"\n          title=\"Обновить аватар\"\n          buttonText=\"Сохранить\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            type=\"url\"\n            name=\"link\"\n            id=\"avatar-link\"\n            placeholder=\"Ссылка на картинку\"\n            className=\"popup__edit-form popup__edit-form_type_link-avatar\"\n            minLength={6}\n            maxLength={200}\n            required\n          />\n          <span className=\"popup__text-error\" id=\"avatar-link-error\" />\n        </PopupWithForm>\n        <template id=\"cardTemplate\" className=\"template-place\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Header.js",["56"],[],"import React from \"react\";\nimport headerLogo from \"../../src/images/logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} />\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Main.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Footer.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/Card.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/ImagePopup.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/components/PopupWithForm.js",[],[],"/Users/admin/Documents/Code/dev/mesto-react/my-app/src/utils/API.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":27,"column":13,"nodeType":"59","messageId":"60","endLine":27,"endColumn":31},{"ruleId":"61","severity":1,"message":"62","line":7,"column":7,"nodeType":"63","endLine":7,"endColumn":56},"no-unused-vars","'handleConfirmClick' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]